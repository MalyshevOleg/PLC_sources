--- a/gfx_rel_es3.x/install.sh	2012-09-24 14:17:12.000000000 +0300
+++ a/gfx_rel_es3.x/install.sh	2012-11-08 18:46:58.000000000 +0200
@@ -164,56 +164,8 @@
 	$DOIT echo "version sgxddk_1.9.RC2@2139099" >${DISCIMAGE}${DDK_INSTALL_LOG}
 	# Install the standard scripts
 	#
-	install_file rc.pvr /etc/init.d/rc.pvr "boot script" 0755 0:0
-
-	# Check the kernel module directory is there
-	#
-	if [ ! -d "${DISCIMAGE}/lib/modules/$(uname -r)" ]; then
-		echo ""
-		echo "Can't find /lib/modules/$(uname -r) on file system installation root"
-		echo -n "There is no kernel module area setup yet. "
-		if [ "$from" = target ]; then
-			echo "On your build machine you should invoke:"
-			echo
-			echo " $ cd \$KERNELDIR"
-			echo " $ make INSTALL_MOD_PATH=\$DISCIMAGE modules_install"
-		else
-			echo "You should invoke:"
-			echo
-			echo " $ cd $KERNELDIR"
-			echo " $ make INSTALL_MOD_PATH=$DISCIMAGE modules_install"
-		fi
-		echo
-		exit 1;
-	fi
-
-	# Install the standard kernel modules
-	# Touch some files that might not exist so that busybox/modprobe don't complain
-	#
-	
-	install_file pvrsrvkm.ko /lib/modules/$(uname -r)/extra/pvrsrvkm.ko "kernel module" 0644 0:0
-	if [ "$host" = 1 ]; then
-			grep -v -e "extra/pvrsrvkm.ko" ${DISCIMAGE}/lib/modules/$(uname -r)/modules.dep >/tmp/modules.$$.tmp
-	echo "/lib/modules/$(uname -r)/extra/pvrsrvkm.ko:" >>/tmp/modules.$$.tmp
-	cp /tmp/modules.$$.tmp ${DISCIMAGE}/lib/modules/$(uname -r)/modules.dep
-	fi
-
-if [ -z "$NO_DISPLAYMOD" ]; then
-		install_file omaplfb.ko /lib/modules/$(uname -r)/extra/omaplfb.ko "kernel module" 0644 0:0
-	if [ "$host" = 1 ]; then
-			grep -v -e "extra/omaplfb.ko" ${DISCIMAGE}/lib/modules/$(uname -r)/modules.dep >/tmp/modules.$$.tmp
-echo "/lib/modules/$(uname -r)/extra/omaplfb.ko: /lib/modules/$(uname -r)/extra/pvrsrvkm.ko" >>/tmp/modules.$$.tmp
-	cp /tmp/modules.$$.tmp ${DISCIMAGE}/lib/modules/$(uname -r)/modules.dep
-	fi
-
-fi
-
-
-
-	$DOIT touch ${DISCIMAGE}/lib/modules/modprobe.conf
-	$DOIT touch ${DISCIMAGE}/etc/modules.conf
-	$DOIT rm -f /tmp/modules.$$.tmp
-
+	install_file rc.pvr /etc/rc.pvr "boot script" 0755 0:0
+	install_file powervr.ini /etc/powervr.ini "config file" 0755 0:0
 
 	# Install the standard libraries
 	#
@@ -265,7 +217,7 @@
 	# Install the standard executables
 	#
 
-	install_file pvrsrvctl /usr/local/bin/pvrsrvctl "binary" 0755 0:0
+	install_file pvrsrvctl /usr/sbin/pvrsrvctl "binary" 0755 0:0
 	install_file sgx_init_test /usr/local/bin/sgx_init_test "binary" 0755 0:0
 
 
--- a/gfx_rel_es3.x/rc.pvr	2012-09-18 17:59:38.000000000 +0300
+++ b/gfx_rel_es3.x/rc.pvr	2012-11-08 19:15:16.000000000 +0200
@@ -25,13 +25,13 @@
 	# Delete the device for PVR services device and recreate with the
 	# correct major number.
 	#
-	pvr_maj=`grep "pvrsrvkm$" /proc/devices | cut -b1,2,3`
-	/bin/rm -f /dev/pvrsrvkm
-	/bin/mknod /dev/pvrsrvkm c $pvr_maj 0
-	/bin/chmod 666 /dev/pvrsrvkm
+	#pvr_maj=`grep "pvrsrvkm$" /proc/devices | cut -b1,2,3`
+	#/bin/rm -f /dev/pvrsrvkm
+	#/bin/mknod /dev/pvrsrvkm c $pvr_maj 0
+	#/bin/chmod 666 /dev/pvrsrvkm
 
 	# Run the PVR initialisation server
-	if ! /usr/local/bin/pvrsrvctl --start --no-module; then return; fi
+	if ! /usr/sbin/pvrsrvctl --start --no-module; then return; fi
 
 	# Load remaining modules.
 	#
@@ -46,7 +46,18 @@
 		fi
 		if ! /sbin/modprobe -q omaplfb $PVR_DISPLAY_PARAMS; then echo "Continuing to load PowerVR services"; omaplfb_failed=1; fi
 	fi
-				
+
+	if ! /sbin/modprobe -q bufferclass_ti; then
+		echo "Module bufferclass_ti failed to load. Retrying."
+		if [ -z $depmod_has_been_run ]; then
+			if [ -e /sbin/depmod ]; then
+				echo "Running /sbin/depmod"
+				/sbin/depmod && depmod_has_been_run=1
+			fi
+		fi
+		if ! /sbin/modprobe -q bufferclass_ti; then echo "Continuing to load PowerVR services"; fi
+	fi
+
 
 	echo "Loaded PowerVR consumer services."
 	return 0;
@@ -58,6 +69,7 @@
 	# has been added which has a dependency on one of these modules.
 	#
 	if rmmod omaplfb; then :; else echo "Warning: Could not unload omaplfb"; fi
+	if rmmod bufferclass_ti; then :; else echo "Warning: Could not unload bufferclass_ti"; fi
 
 	# Unload the PVR Services module.
 	#
--- /dev/null	1970-01-01 03:00:00.000000000 +0300
+++ b/gfx_rel_es3.x/powervr.ini	2012-04-25 16:29:58.000000000 +0300
@@ -0,0 +1,4 @@
+[default]
+WindowSystem=libpvrQWSWSEGL.so
+#WindowSystem=libpvrPVR2D_FLIPWSEGL.so
+
--- /dev/null	2012-11-07 19:00:49.786710867 +0200
+++ b/include/OGLES/GLES/egltypes.h	2012-04-25 16:29:34.000000000 +0300
@@ -0,0 +1,55 @@
+/*****************************************************************************
+ Name :		egltypes.h
+ Date :		11/04/05
+ Platform : Linux NULL WS
+
+ Description :
+ Native egltypes.h as required by Khronos OpenGL ES egl.h
+
+ This file is part of the PowerVR OpenGL ES SDK.
+
+ Copyright 2000-2005 by Imagination Technologies Ltd. All rights reserved.
+ Information and source code samples contained herein are
+ provided "as-is", without representations or warranties, and
+ are subject to change without notice. The author cannot support
+ modifications or derivative works created from the sample source
+ code provided. You may use, reproduce, and modify portions or
+ entire sections of the sample source code for the purposes of
+ creating applications. Distribution is limited to executable
+ or binary portions of the sample source code unless you gain
+ written permission from the author.
+*****************************************************************************/
+#ifndef _egltypes_h_
+#define _egltypes_h_
+
+#define APIENTRY
+
+/* Types */
+typedef int EGLBoolean;
+#define EGL_FALSE 0
+#define EGL_TRUE  1
+
+/* An integer of at least 32 bits */
+typedef int EGLint;
+
+/* Resources */
+typedef EGLint EGLDisplay;
+typedef EGLint EGLConfig;
+typedef struct _KEGL_SURFACE_ *EGLSurface;
+typedef struct _KEGL_CONTEXT_ *EGLContext;
+
+/* Windowing system: Linux NULL */
+typedef int		 NativeDisplayType;
+typedef void	*NativeWindowType;
+typedef void	*NativePixmapType;
+
+/* May need to export on some platforms */
+#define GLAPI_EXT
+
+/* EGL and native handle values */
+#define EGL_DEFAULT_DISPLAY ((NativeDisplayType)0)
+#define EGL_NO_CONTEXT ((EGLContext)0)
+#define EGL_NO_DISPLAY ((EGLDisplay)0)
+#define EGL_NO_SURFACE ((EGLSurface)0)
+
+#endif
