diff -Nru net-snmp-5.6.1/agent/mibgroup/owen/Makefile.dlmod net-snmp-5.6.1_new/agent/mibgroup/owen/Makefile.dlmod
--- net-snmp-5.6.1/agent/mibgroup/owen/Makefile.dlmod	1970-01-01 03:00:00.000000000 +0300
+++ net-snmp-5.6.1_new/agent/mibgroup/owen/Makefile.dlmod	2011-04-20 09:29:06.000000000 +0300
@@ -0,0 +1,34 @@
+#
+# Makefile for dynamically loadable module `owen'
+#
+#DLMODDIR	= $(libdir)/snmp/dlmod
+#UCDTOPDIR	= $(top_srcdir)
+DLMODDIR	= /usr/local/lib/snmp/dlmod
+UCDTOPDIR	= /usr/home/strauss/src/ucd-snmp-ibr
+TARG		= owen.so
+OBJS		= owen.o
+CC		= gcc
+CFLAGS		= -I$(UCDTOPDIR) -I$(UCDTOPDIR)/snmplib -I$(UCDTOPDIR)/agent -I$(UCDTOPDIR)/agent/mibgroup -shared -fPIC
+#LD		= ld
+#LDFLAGS		= -G -o
+LD		= gcc -shared -o
+LDFLAGS		= 
+INSTALL		= install
+LIBS		= 
+
+all: $(TARG)
+
+.c.o:
+	$(CC) $(CFLAGS) -o $@ -c $<
+
+$(TARG): $(OBJS)
+	$(LD) $(LDFLAGS) $@ $(OBJS) $(LIBS)
+
+clean:
+	rm -f $(OBJS) $(TARG)
+
+install: all installdirs
+	$(INSTALL) $(TARG) $(DLMODDIR)
+
+installdirs:
+	@$(SHELL) $(UCDTOPDIR)/mkinstalldirs $(DLMODDIR)
diff -Nru net-snmp-5.6.1/agent/mibgroup/owen/plc304msan.c net-snmp-5.6.1_new/agent/mibgroup/owen/plc304msan.c
--- net-snmp-5.6.1/agent/mibgroup/owen/plc304msan.c	1970-01-01 03:00:00.000000000 +0300
+++ net-snmp-5.6.1_new/agent/mibgroup/owen/plc304msan.c	2011-04-20 09:29:06.000000000 +0300
@@ -0,0 +1,351 @@
+/*
+ * Note: this file originally auto-generated by mib2c using
+ *        : mib2c.scalar.conf 17798 2009-10-27 06:44:54Z magfr $
+ */
+
+#include <net-snmp/net-snmp-config.h>
+#include <net-snmp/net-snmp-includes.h>
+#include <net-snmp/agent/net-snmp-agent-includes.h>
+#include "plc304msan.h"
+#include "plc304msan_pvt.h"
+
+static Netsnmp_Node_Handler handle_temperature1;
+static Netsnmp_Node_Handler handle_temperature2;
+static Netsnmp_Node_Handler handle_temperature3;
+static Netsnmp_Node_Handler handle_temperature4;
+static Netsnmp_Node_Handler handle_fan1;
+static Netsnmp_Node_Handler handle_fan2;
+static Netsnmp_Node_Handler handle_fan3;
+static Netsnmp_Node_Handler handle_fan4;
+static Netsnmp_Node_Handler handle_fan5;
+static Netsnmp_Node_Handler handle_fan6;
+static Netsnmp_Node_Handler handle_door;
+static Netsnmp_Node_Handler handle_fireAlarm;
+static Netsnmp_Node_Handler handle_vandal;
+static Netsnmp_Node_Handler handle_water;
+static Netsnmp_Node_Handler handle_deltaUPS;
+static Netsnmp_Node_Handler handle_electricMeter;
+static Netsnmp_Node_Handler handle_sensorName;
+static Netsnmp_Node_Handler handle_sensorValue;
+
+static int handle_string_value(int mi, netsnmp_mib_handler *handler,
+			netsnmp_handler_registration *reginfo,
+			netsnmp_agent_request_info *reqinfo,
+			netsnmp_request_info *requests);
+
+const oid temperature1_oid[] = { 1,3,6,1,4,1,181175,2,2835,1,1,1 };
+const oid temperature2_oid[] = { 1,3,6,1,4,1,181175,2,2835,1,1,2 };
+const oid temperature3_oid[] = { 1,3,6,1,4,1,181175,2,2835,1,1,3 };
+const oid temperature4_oid[] = { 1,3,6,1,4,1,181175,2,2835,1,1,4 };
+const oid fan1_oid[] = { 1,3,6,1,4,1,181175,2,2835,1,1,11 };
+const oid fan2_oid[] = { 1,3,6,1,4,1,181175,2,2835,1,1,12 };
+const oid fan3_oid[] = { 1,3,6,1,4,1,181175,2,2835,1,1,13 };
+const oid fan4_oid[] = { 1,3,6,1,4,1,181175,2,2835,1,1,14 };
+const oid fan5_oid[] = { 1,3,6,1,4,1,181175,2,2835,1,1,15 };
+const oid fan6_oid[] = { 1,3,6,1,4,1,181175,2,2835,1,1,16 };
+const oid door_oid[] = { 1,3,6,1,4,1,181175,2,2835,1,1,21 };
+const oid fireAlarm_oid[] = { 1,3,6,1,4,1,181175,2,2835,1,1,22 };
+const oid vandal_oid[] = { 1,3,6,1,4,1,181175,2,2835,1,1,23 };
+const oid water_oid[] = { 1,3,6,1,4,1,181175,2,2835,1,1,24 };
+const oid deltaUPS_oid[] = { 1,3,6,1,4,1,181175,2,2835,1,1,31 };
+const oid electricMeter_oid[] = { 1,3,6,1,4,1,181175,2,2835,1,1,32 };
+const oid sensorName_oid[] = { 1,3,6,1,4,1,181175,2,2835,1,2,1,1 };
+const oid sensorValue_oid[] = { 1,3,6,1,4,1,181175,2,2835,1,2,1,2 };
+
+/* Important: order of definition == MI_* constant */
+static mib_var vars[] = {
+	{ "temperature1", temperature1_oid, OID_LENGTH(temperature1_oid), "-300",
+	    handle_temperature1, },
+	{ "temperature2", temperature2_oid, OID_LENGTH(temperature2_oid), "-300",
+	    handle_temperature2, },
+	{ "temperature3", temperature3_oid, OID_LENGTH(temperature3_oid), "-300",
+	    handle_temperature3, },
+	{ "temperature4", temperature4_oid, OID_LENGTH(temperature4_oid), "-300",
+	    handle_temperature4, },
+
+	{ "fan1", fan1_oid, OID_LENGTH(fan1_oid), "-1", handle_fan1, },
+	{ "fan2", fan2_oid, OID_LENGTH(fan2_oid), "-1", handle_fan2, },
+	{ "fan3", fan3_oid, OID_LENGTH(fan3_oid), "-1", handle_fan3, },
+	{ "fan4", fan4_oid, OID_LENGTH(fan4_oid), "-1", handle_fan4, },
+	{ "fan5", fan5_oid, OID_LENGTH(fan5_oid), "-1", handle_fan5, },
+	{ "fan6", fan6_oid, OID_LENGTH(fan6_oid), "-1", handle_fan6, },
+
+	{ "door", door_oid, OID_LENGTH(door_oid), "closed", handle_door, },
+	{ "fireAlarm", fireAlarm_oid, OID_LENGTH(fireAlarm_oid), "none", handle_fireAlarm, },
+	{ "vandal", vandal_oid, OID_LENGTH(vandal_oid), "none", handle_vandal, },
+	{ "water", water_oid, OID_LENGTH(water_oid), "none", handle_water, },
+	{ "deltaUPS", deltaUPS_oid, OID_LENGTH(deltaUPS_oid), "OnLine", handle_deltaUPS, },
+	{ "electricMeter", electricMeter_oid, OID_LENGTH(electricMeter_oid), "none", handle_electricMeter, },
+
+	{ "sensorName", sensorName_oid, OID_LENGTH(sensorName_oid), "none", handle_sensorName, },
+	{ "sensorValue", sensorValue_oid, OID_LENGTH(sensorValue_oid), "none", handle_sensorValue, },
+};
+
+/** Initializes the plc304msan module */
+void
+init_plc304msan(void)
+{
+	int i;
+	size_t len;
+
+	DEBUGMSGTL(("plc304msan", "Initializing\n"));
+
+	for (i = 0; i < MI_COUNT; i++) {
+		len = strlen(vars[i].defval);
+		if (len > VALUE_STRING_MAX_LEN) {
+			strncpy(vars[i].value, vars[i].defval, VALUE_STRING_MAX_LEN);
+			vars[i].value[VALUE_STRING_MAX_LEN] = 0;
+		} else {
+			strcpy(vars[i].value, vars[i].defval);
+		}
+		netsnmp_register_scalar(
+			netsnmp_create_handler_registration(vars[i].name, 
+					vars[i].handler,
+					vars[i].poid,
+					vars[i].oid_len, 
+					HANDLER_CAN_RWRITE));
+	}
+}
+
+static int handle_string_value(int mi, netsnmp_mib_handler *handler,
+			netsnmp_handler_registration *reginfo,
+			netsnmp_agent_request_info *reqinfo,
+			netsnmp_request_info *requests)
+{
+	mib_var *var;
+	int ret;
+	
+	if (mi < 0 || mi >= MI_COUNT) {
+		snmp_log(LOG_ERR, "unknown mib var index (%d) in handle_string_value\n", mi);
+		return SNMP_ERR_GENERR;
+	}
+	
+	var = &vars[mi];
+	
+/* We are never called for a GETNEXT if it's registered as a
+   "instance", as it's "magically" handled for us.  */
+
+/* a instance handler also only hands us one request at a time, so
+   we don't need to loop over a list of requests; we'll only get one. */
+
+	switch(reqinfo->mode) {
+
+		case MODE_GET:
+			snmp_set_var_typed_value(requests->requestvb, ASN_OCTET_STR,
+				var->value, strlen(var->value));
+			break;
+
+		/*
+		 * SET REQUEST
+		 */
+		case MODE_SET_RESERVE1:
+			ret = netsnmp_check_vb_type_and_max_size(requests->requestvb, 
+					ASN_OCTET_STR, VALUE_STRING_MAX_LEN);
+			if (ret != SNMP_ERR_NOERROR) {
+				netsnmp_set_request_error(reqinfo, requests, ret);
+			}
+			break;
+
+		case MODE_SET_RESERVE2:
+		case MODE_SET_FREE:
+			break;
+
+		case MODE_SET_ACTION:
+			strncpy(var->value, 
+				requests->requestvb->val.string,
+				requests->requestvb->val_len);
+			var->value[requests->requestvb->val_len] = 0;
+			break;
+
+		case MODE_SET_COMMIT:
+		case MODE_SET_UNDO:
+			break;
+
+		default:
+            /* we should never get here, so this is a really bad error */
+			snmp_log(LOG_ERR, "unknown mode (%d) in handle_temperature1\n", reqinfo->mode );
+			return SNMP_ERR_GENERR;
+	}
+
+	return SNMP_ERR_NOERROR;
+}
+
+int
+handle_temperature1(netsnmp_mib_handler *handler,
+                          netsnmp_handler_registration *reginfo,
+                          netsnmp_agent_request_info   *reqinfo,
+                          netsnmp_request_info         *requests)
+{
+	return handle_string_value(MI_TEMPERATURE1,
+		handler, reginfo, reqinfo, requests);
+}
+
+int
+handle_temperature2(netsnmp_mib_handler *handler,
+                          netsnmp_handler_registration *reginfo,
+                          netsnmp_agent_request_info   *reqinfo,
+                          netsnmp_request_info         *requests)
+{
+	return handle_string_value(MI_TEMPERATURE2,
+		handler, reginfo, reqinfo, requests);
+}
+
+int
+handle_temperature3(netsnmp_mib_handler *handler,
+                          netsnmp_handler_registration *reginfo,
+                          netsnmp_agent_request_info   *reqinfo,
+                          netsnmp_request_info         *requests)
+{
+	return handle_string_value(MI_TEMPERATURE3,
+		handler, reginfo, reqinfo, requests);
+}
+
+int
+handle_temperature4(netsnmp_mib_handler *handler,
+                          netsnmp_handler_registration *reginfo,
+                          netsnmp_agent_request_info   *reqinfo,
+                          netsnmp_request_info         *requests)
+{
+	return handle_string_value(MI_TEMPERATURE4,
+		handler, reginfo, reqinfo, requests);
+}
+
+int
+handle_fan1(netsnmp_mib_handler *handler,
+                          netsnmp_handler_registration *reginfo,
+                          netsnmp_agent_request_info   *reqinfo,
+                          netsnmp_request_info         *requests)
+{
+	return handle_string_value(MI_FAN1,
+		handler, reginfo, reqinfo, requests);
+}
+
+int
+handle_fan2(netsnmp_mib_handler *handler,
+                          netsnmp_handler_registration *reginfo,
+                          netsnmp_agent_request_info   *reqinfo,
+                          netsnmp_request_info         *requests)
+{
+	return handle_string_value(MI_FAN2,
+		handler, reginfo, reqinfo, requests);
+}
+
+int
+handle_fan3(netsnmp_mib_handler *handler,
+                          netsnmp_handler_registration *reginfo,
+                          netsnmp_agent_request_info   *reqinfo,
+                          netsnmp_request_info         *requests)
+{
+	return handle_string_value(MI_FAN3,
+		handler, reginfo, reqinfo, requests);
+}
+
+int
+handle_fan4(netsnmp_mib_handler *handler,
+                          netsnmp_handler_registration *reginfo,
+                          netsnmp_agent_request_info   *reqinfo,
+                          netsnmp_request_info         *requests)
+{
+	return handle_string_value(MI_FAN4,
+		handler, reginfo, reqinfo, requests);
+}
+
+int
+handle_fan5(netsnmp_mib_handler *handler,
+                          netsnmp_handler_registration *reginfo,
+                          netsnmp_agent_request_info   *reqinfo,
+                          netsnmp_request_info         *requests)
+{
+	return handle_string_value(MI_FAN5,
+		handler, reginfo, reqinfo, requests);
+}
+
+int
+handle_fan6(netsnmp_mib_handler *handler,
+                          netsnmp_handler_registration *reginfo,
+                          netsnmp_agent_request_info   *reqinfo,
+                          netsnmp_request_info         *requests)
+{
+	return handle_string_value(MI_FAN6,
+		handler, reginfo, reqinfo, requests);
+}
+
+int
+handle_door(netsnmp_mib_handler *handler,
+                          netsnmp_handler_registration *reginfo,
+                          netsnmp_agent_request_info   *reqinfo,
+                          netsnmp_request_info         *requests)
+{
+	return handle_string_value(MI_DOOR,
+		handler, reginfo, reqinfo, requests);
+}
+
+int
+handle_fireAlarm(netsnmp_mib_handler *handler,
+                          netsnmp_handler_registration *reginfo,
+                          netsnmp_agent_request_info   *reqinfo,
+                          netsnmp_request_info         *requests)
+{
+	return handle_string_value(MI_FIRE_ALARM,
+		handler, reginfo, reqinfo, requests);
+}
+
+int
+handle_vandal(netsnmp_mib_handler *handler,
+                          netsnmp_handler_registration *reginfo,
+                          netsnmp_agent_request_info   *reqinfo,
+                          netsnmp_request_info         *requests)
+{
+	return handle_string_value(MI_VANDAL,
+		handler, reginfo, reqinfo, requests);
+}
+
+int
+handle_water(netsnmp_mib_handler *handler,
+                          netsnmp_handler_registration *reginfo,
+                          netsnmp_agent_request_info   *reqinfo,
+                          netsnmp_request_info         *requests)
+{
+	return handle_string_value(MI_WATER,
+		handler, reginfo, reqinfo, requests);
+}
+
+int
+handle_deltaUPS(netsnmp_mib_handler *handler,
+                          netsnmp_handler_registration *reginfo,
+                          netsnmp_agent_request_info   *reqinfo,
+                          netsnmp_request_info         *requests)
+{
+	return handle_string_value(MI_DELTA_UPS,
+		handler, reginfo, reqinfo, requests);
+}
+
+int
+handle_electricMeter(netsnmp_mib_handler *handler,
+                          netsnmp_handler_registration *reginfo,
+                          netsnmp_agent_request_info   *reqinfo,
+                          netsnmp_request_info         *requests)
+{
+	return handle_string_value(MI_ELECTRIC_METER,
+		handler, reginfo, reqinfo, requests);
+}
+
+int
+handle_sensorName(netsnmp_mib_handler *handler,
+                          netsnmp_handler_registration *reginfo,
+                          netsnmp_agent_request_info   *reqinfo,
+                          netsnmp_request_info         *requests)
+{
+	return handle_string_value(MI_SENSOR_NAME,
+		handler, reginfo, reqinfo, requests);
+}
+
+int
+handle_sensorValue(netsnmp_mib_handler *handler,
+                          netsnmp_handler_registration *reginfo,
+                          netsnmp_agent_request_info   *reqinfo,
+                          netsnmp_request_info         *requests)
+{
+	return handle_string_value(MI_SENSOR_VALUE,
+		handler, reginfo, reqinfo, requests);
+}
diff -Nru net-snmp-5.6.1/agent/mibgroup/owen/plc304msan.h net-snmp-5.6.1_new/agent/mibgroup/owen/plc304msan.h
--- net-snmp-5.6.1/agent/mibgroup/owen/plc304msan.h	1970-01-01 03:00:00.000000000 +0300
+++ net-snmp-5.6.1_new/agent/mibgroup/owen/plc304msan.h	2011-04-20 09:29:06.000000000 +0300
@@ -0,0 +1,11 @@
+/*
+ * Note: this file originally auto-generated by mib2c using
+ *        : mib2c.scalar.conf 17798 2009-10-27 06:44:54Z magfr $
+ */
+#ifndef PLC304MSAN_H
+#define PLC304MSAN_H
+
+/* function declarations */
+void init_plc304msan(void);
+
+#endif /* PLC304MSAN_H */
diff -Nru net-snmp-5.6.1/agent/mibgroup/owen/plc304msan_pvt.h net-snmp-5.6.1_new/agent/mibgroup/owen/plc304msan_pvt.h
--- net-snmp-5.6.1/agent/mibgroup/owen/plc304msan_pvt.h	1970-01-01 03:00:00.000000000 +0300
+++ net-snmp-5.6.1_new/agent/mibgroup/owen/plc304msan_pvt.h	2011-04-20 09:29:06.000000000 +0300
@@ -0,0 +1,68 @@
+/*
+ * Note: this file originally auto-generated by mib2c using
+ *        : mib2c.scalar.conf 17798 2009-10-27 06:44:54Z magfr $
+ */
+#ifndef PLC304MSAN_PVT_H
+#define PLC304MSAN_PVT_H
+
+/* all variables are strings with max len == */
+#define VALUE_STRING_MAX_LEN 20
+
+enum mib_item {
+	MI_TEMPERATURE1 = 0,
+	MI_TEMPERATURE2,
+	MI_TEMPERATURE3,
+	MI_TEMPERATURE4,
+
+	MI_FAN1,
+	MI_FAN2,
+	MI_FAN3,
+	MI_FAN4,
+	MI_FAN5,
+	MI_FAN6,
+
+	MI_DOOR,
+	MI_FIRE_ALARM,
+	MI_VANDAL,
+	MI_WATER,
+	MI_DELTA_UPS,
+	MI_ELECTRIC_METER,
+
+	MI_SENSOR_NAME,
+	MI_SENSOR_VALUE,
+	
+	/* used for array size */
+	MI_COUNT
+};
+
+typedef struct mib_var {
+	const char *name;
+	const oid *poid;
+	int oid_len;
+	const char *defval;
+	Netsnmp_Node_Handler *handler;
+	char value[VALUE_STRING_MAX_LEN + 1]; /* + 1 is for zero-term */
+} mib_var;
+
+static Netsnmp_Node_Handler handle_temperature1;
+static Netsnmp_Node_Handler handle_temperature2;
+static Netsnmp_Node_Handler handle_temperature3;
+static Netsnmp_Node_Handler handle_temperature4;
+static Netsnmp_Node_Handler handle_fan1;
+static Netsnmp_Node_Handler handle_fan2;
+static Netsnmp_Node_Handler handle_fan3;
+static Netsnmp_Node_Handler handle_fan4;
+static Netsnmp_Node_Handler handle_fan5;
+static Netsnmp_Node_Handler handle_fan6;
+
+static Netsnmp_Node_Handler handle_door;
+static Netsnmp_Node_Handler handle_fireAlarm;
+static Netsnmp_Node_Handler handle_vandal;
+static Netsnmp_Node_Handler handle_water;
+static Netsnmp_Node_Handler handle_deltaUPS;
+static Netsnmp_Node_Handler handle_electricMeter;
+
+static Netsnmp_Node_Handler handle_sensorName;
+static Netsnmp_Node_Handler handle_sensorValue;
+
+#endif /* PLC304MSAN_PVT_H */
diff -Nru net-snmp-5.6.1/mibs/Makefile.in net-snmp-5.6.1_new/mibs/Makefile.in
--- net-snmp-5.6.1/mibs/Makefile.in	2010-03-31 18:34:24.000000000 +0300
+++ net-snmp-5.6.1_new/mibs/Makefile.in	2011-04-20 09:29:06.000000000 +0300
@@ -50,9 +50,12 @@
 
 DEFAULTMIBS = @default_mibs_install@
 
+OWENMIBS = OWEN-MIB.txt OWEN-T2835-MIB.txt
+
 MIBS	= $(V1MIBS) $(V2MIBS) $(V3MIBS) $(RFCMIBS) \
 	$(AGENTMIBS) $(IANAMIBS) \
-	$(NETSNMPMIBS) $(UCDMIBS) $(DEFAULTMIBS)
+	$(NETSNMPMIBS) $(UCDMIBS) $(DEFAULTMIBS) \
+	$(OWENMIBS)
 
 all: standardall
 
diff -Nru net-snmp-5.6.1/mibs/OWEN-MIB.txt net-snmp-5.6.1_new/mibs/OWEN-MIB.txt
--- net-snmp-5.6.1/mibs/OWEN-MIB.txt	1970-01-01 03:00:00.000000000 +0300
+++ net-snmp-5.6.1_new/mibs/OWEN-MIB.txt	2011-04-20 09:29:06.000000000 +0300
@@ -0,0 +1,21 @@
+OWEN-MIB DEFINITIONS ::= BEGIN
+
+IMPORTS
+    MODULE-IDENTITY, enterprises            FROM SNMPv2-SMI;
+
+owen MODULE-IDENTITY
+    LAST-UPDATED "201104190000Z"
+    ORGANIZATION "Owen"
+    CONTACT-INFO
+        "postal:   Moscow, Russia"
+    DESCRIPTION
+        "Owen mib, OID is fake for now"
+    REVISION     "201104190000Z"
+    DESCRIPTION
+        "First draft"
+    ::= { enterprises 181175 }
+
+owenOfficial         OBJECT IDENTIFIER ::= { owen 1 } 
+owenExperimental     OBJECT IDENTIFIER ::= { owen 2 } 
+
+END
diff -Nru net-snmp-5.6.1/mibs/OWEN-T2835-MIB.txt net-snmp-5.6.1_new/mibs/OWEN-T2835-MIB.txt
--- net-snmp-5.6.1/mibs/OWEN-T2835-MIB.txt	1970-01-01 03:00:00.000000000 +0300
+++ net-snmp-5.6.1_new/mibs/OWEN-T2835-MIB.txt	2011-04-20 09:29:06.000000000 +0300
@@ -0,0 +1,227 @@
+OWEN-T2835-MIB DEFINITIONS ::= BEGIN
+
+IMPORTS
+    owenExperimental                              FROM OWEN-MIB
+    MODULE-IDENTITY, NOTIFICATION-TYPE            FROM SNMPv2-SMI
+;
+
+t2835 MODULE-IDENTITY
+    LAST-UPDATED "201104190000Z"
+    ORGANIZATION "Owen"
+    CONTACT-INFO    
+        "postal:   Moscow, Russia"
+    DESCRIPTION
+        "Owen ticket 2835 mib"
+    REVISION     "201104190000Z"
+    DESCRIPTION
+        "First draft"
+    ::= { owenExperimental 2835 }
+
+plc304msan    OBJECT IDENTIFIER ::= { t2835 1 }
+sensors       OBJECT IDENTIFIER ::= { plc304msan 1 }
+traps         OBJECT IDENTIFIER ::= { plc304msan 2 }
+trapPrefix    OBJECT IDENTIFIER ::= { traps 0 }
+trapObjects   OBJECT IDENTIFIER ::= { traps 1 }
+
+--
+-- Temperature sensors x 4
+--
+
+temperature1 OBJECT-TYPE
+    SYNTAX      OCTET STRING (SIZE(1..20))
+    MAX-ACCESS  read-write
+    STATUS      current
+    DESCRIPTION
+        "Temperature 1"
+    DEFVAL { "-300" }
+    ::= { sensors 1 }
+
+temperature2 OBJECT-TYPE
+    SYNTAX      OCTET STRING (SIZE(1..20))
+    MAX-ACCESS  read-write
+    STATUS      current
+    DESCRIPTION
+        "Temperature 2"
+    DEFVAL { "-300" }
+    ::= { sensors 2 }
+
+temperature3 OBJECT-TYPE
+    SYNTAX      OCTET STRING (SIZE(1..20))
+    MAX-ACCESS  read-write
+    STATUS      current
+    DESCRIPTION
+        "Temperature 3"
+    DEFVAL { "-300" }
+    ::= { sensors 3 }
+
+temperature4 OBJECT-TYPE
+    SYNTAX      OCTET STRING (SIZE(1..20))
+    MAX-ACCESS  read-write
+    STATUS      current
+    DESCRIPTION
+        "Temperature 4"
+    DEFVAL { "-300" }
+    ::= { sensors 4 }
+
+--
+-- FAN sensors x 6
+--
+
+fan1 OBJECT-TYPE
+    SYNTAX      OCTET STRING (SIZE(1..20))
+    MAX-ACCESS  read-write
+    STATUS      current
+    DESCRIPTION
+        "FAN 1"
+    DEFVAL { "-1" }
+    ::= { sensors 11 }
+
+fan2 OBJECT-TYPE
+    SYNTAX      OCTET STRING (SIZE(1..20))
+    MAX-ACCESS  read-write
+    STATUS      current
+    DESCRIPTION
+        "FAN 2"
+    DEFVAL { "-1" }
+    ::= { sensors 12 }
+
+fan3 OBJECT-TYPE
+    SYNTAX      OCTET STRING (SIZE(1..20))
+    MAX-ACCESS  read-write
+    STATUS      current
+    DESCRIPTION
+        "FAN 3"
+    DEFVAL { "-1" }
+    ::= { sensors 13 }
+
+fan4 OBJECT-TYPE
+    SYNTAX      OCTET STRING (SIZE(1..20))
+    MAX-ACCESS  read-write
+    STATUS      current
+    DESCRIPTION
+        "FAN 4"
+    DEFVAL { "-1" }
+    ::= { sensors 14 }
+
+fan5 OBJECT-TYPE
+    SYNTAX      OCTET STRING (SIZE(1..20))
+    MAX-ACCESS  read-write
+    STATUS      current
+    DESCRIPTION
+        "FAN 5"
+    DEFVAL { "-1" }
+    ::= { sensors 15 }
+
+fan6 OBJECT-TYPE
+    SYNTAX      OCTET STRING (SIZE(1..20))
+    MAX-ACCESS  read-write
+    STATUS      current
+    DESCRIPTION
+        "FAN 6"
+    DEFVAL { "-1" }
+    ::= { sensors 16 }
+
+--
+-- Door sensor
+--
+
+door OBJECT-TYPE
+    SYNTAX      OCTET STRING (SIZE(1..20))
+    MAX-ACCESS  read-write
+    STATUS      current
+    DESCRIPTION
+        "Door"
+    DEFVAL { "closed" }
+    ::= { sensors 21 }
+
+--
+-- Fire alarm sensor
+--
+
+fireAlarm OBJECT-TYPE
+    SYNTAX      OCTET STRING (SIZE(1..20))
+    MAX-ACCESS  read-write
+    STATUS      current
+    DESCRIPTION
+        "Fire alarm"
+    DEFVAL { "none" }
+    ::= { sensors 22 }
+
+--
+-- Vandal(strike) sensor
+--
+
+vandal OBJECT-TYPE
+    SYNTAX      OCTET STRING (SIZE(1..20))
+    MAX-ACCESS  read-write
+    STATUS      current
+    DESCRIPTION
+        "Vandal"
+    DEFVAL { "none" }
+    ::= { sensors 23 }
+
+--
+-- Water sensor
+--
+
+water OBJECT-TYPE
+    SYNTAX      OCTET STRING (SIZE(1..20))
+    MAX-ACCESS  read-write
+    STATUS      current
+    DESCRIPTION
+        "Water"
+    DEFVAL { "none" }
+    ::= { sensors 24 }
+
+--
+-- Power sensors
+--
+
+deltaUPS OBJECT-TYPE
+    SYNTAX      OCTET STRING (SIZE(1..20))
+    MAX-ACCESS  read-write
+    STATUS      current
+    DESCRIPTION
+        "Delta UPS"
+    DEFVAL { "OnLine" }
+    ::= { sensors 31 }
+
+electricMeter OBJECT-TYPE
+    SYNTAX      OCTET STRING (SIZE(1..20))
+    MAX-ACCESS  read-write
+    STATUS      current
+    DESCRIPTION
+        "Electric meter"
+    DEFVAL { "none" }
+    ::= { sensors 32 }
+
+--
+-- Traps and objects
+--
+
+sensorName OBJECT-TYPE
+    SYNTAX      OCTET STRING (SIZE(1..20))
+    MAX-ACCESS  read-write
+    STATUS      current
+    DESCRIPTION
+        "Name of the sensor generated alarm"
+    DEFVAL { "none" }
+    ::= { trapObjects 1 }
+
+sensorValue OBJECT-TYPE
+    SYNTAX      OCTET STRING (SIZE(1..20))
+    MAX-ACCESS  read-write
+    STATUS      current
+    DESCRIPTION
+        "Value of the sensor generated alarm"
+    DEFVAL { "none" }
+    ::= { trapObjects 2 }
+
+sensorAlarm NOTIFICATION-TYPE
+    OBJECTS     { sensorName, sensorValue }
+    STATUS      current
+    DESCRIPTION
+        "Sensor alarm notification"
+    ::= { trapPrefix 1 }
+
+END
