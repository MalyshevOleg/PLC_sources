diff -Nru a/Makefile b/Makefile
--- a/Makefile	2011-02-24 18:41:07.000000000 +0200
+++ b/Makefile	2012-09-13 17:55:18.000000000 +0300
@@ -1,14 +1,21 @@
-VERSION=1.2
+VERSION=1.3.5
 APP_NAME=rmsync
 
 SRCDIR=.
+# for BS
+VPATH=$(SRCDIR)
 CFLAGS=-Wall
 ifndef X86
-CROSS_COMPILE=/home/alex/owen_link/rt/buildsys/cross/bin/arm-unknown-linux-gnueabi-
+CROSS_COMPILE=/home/alex/owen/buildsys/cross/bin/arm-unknown-linux-gnueabi-
 else
 CROSS_COMPILE=
 endif
-#CFLAGS+=-DDEBUG
+INCLUDES=-I.
+
+ifeq ($(DEBUG),1)
+CFLAGS+=-DDEBUG
+VERSION:=$(VERSION)d
+endif
 
 CC=$(CROSS_COMPILE)gcc
 STRIP=$(CROSS_COMPILE)strip
@@ -17,12 +24,12 @@
 
 TARGET=rmsync
 
-SRC=$(SRCDIR)/rmsync.c  
+SRC=$(SRCDIR)/rmsync.c
 
 $(TARGET): $(SRC) version.h
-	$(CC) -o $@ $(SRC) $(CFLAGS) $(LDFLAGS)
+	$(CC) -o $@ $(SRC) $(INCLUDES) $(CFLAGS) $(LDFLAGS)
 
-version.h: $(SRC)
+version.h: Makefile
 	@$(SRCDIR)/version.sh $(APP_NAME) $(VERSION)
 
 strip: $(TARGET)
@@ -30,7 +37,4 @@
 
 clean:
 	@rm -f $(TARGET)
-
-cleanall:
-	@rm -f $(TARGET)
 	@rm -f version.h
diff -Nru a/rmsync.c b/rmsync.c
--- a/rmsync.c	2011-02-24 18:41:07.000000000 +0200
+++ b/rmsync.c	2012-09-13 17:55:18.000000000 +0300
@@ -14,6 +14,8 @@
 #include "log.h"
 int log_level = LEVEL_INFO;
 
+#define OWEN_LPVD_FIQ_INTERFACE "/proc/owen_lpvd_fiq_enable"
+
 typedef struct {
 	int fd_mem;	/* /dev/mem */
 
@@ -28,6 +30,8 @@
 		unsigned cfg_parsed: 1;
 		unsigned req_cfg_parsing: 1;
 		unsigned req_exit: 1;
+		
+		unsigned no_fiq_init: 1;
 	} flags;
 
 	/* params */
@@ -52,6 +56,8 @@
 		.cfg_parsed = 0,
 		.req_cfg_parsing = 0,
 		.req_exit = 0,
+		
+		.no_fiq_init = 0,
 	},
 
 	/* params: default values */
@@ -67,6 +73,7 @@
 static int parse_addr(const char *val_str, void *data);
 static int parse_int(const char *val_str, void *data);
 static int parse_fname(const char *val_str, void *data);
+static void switch_lpvd_fiq(int on);
 
 typedef struct {
 	const char *name;
@@ -89,13 +96,14 @@
 static void usage()
 {
 	printf(
-	APP_NAME " (" APP_VERSION "): synchronizes retain memory with its shadow buffer.\n"
+	APP_NAME " v" APP_VERSION "\nSynchronize retain memory with its shadow buffer.\n"
 	"Usage:\n"
-	"   " APP_NAME " [-c cfg_file] [-h] [-v]\n"
+	"   " APP_NAME " [-c cfg_file] [-h] [-v] [-f flag]\n"
 	"\n"
-	"   -c cfg_file    config file path-name (default: [rundir]/retain.cfg)\n"
-        "   -h             print this screen and exit\n"
-        "   -v x N         increase verbosity level (e.g. -v -v is verbosity level +2)\n"
+	"   -c cfg_file    config file path-name (default: [rundir]/" APP_NAME ".cfg)\n"
+	"   -h             print this screen and exit\n"
+	"   -v x N         increase verbosity level (e.g. -v -v is verbosity level +2)\n"
+	"   -f flag        init FIQ or not (0 - do not init, default - init)\n"
 	);
 }
 
@@ -112,7 +120,7 @@
 	}
 	
 	len_copy = p + 1 - prog_fname; /* +1 include / */
-	len += len_copy + sizeof(APP_NAME) + 4; /* 4 = ".cfg", sizeof("..") includes terminating 0 */
+	len = len_copy + sizeof(APP_NAME) + 4; /* 4 = ".cfg", sizeof("..") includes terminating 0 */
 	
 	ctx.cfg_fname = malloc(len);
 	if (!ctx.cfg_fname) {
@@ -130,7 +138,7 @@
 	int opt;
 	opterr = 0;
 	
-	while ((opt = getopt(argc, argv, "c:hv")) != -1) {
+	while ((opt = getopt(argc, argv, "c:hvf:")) != -1) {
 		switch (opt) {
 		case 'c':
 			if (ctx.cfg_fname) {
@@ -152,6 +160,10 @@
 		case 'v':
 			log_level++;
 			break;
+
+		case 'f':
+			ctx.flags.no_fiq_init = !atoi(optarg);
+			break;
 			
 		case '?':
 			pr_err("option '%c' requires an argument\n", optopt);
@@ -202,6 +214,30 @@
 	return 0;
 }
 
+static void switch_lpvd_fiq(int on)
+{
+	int fd;
+	ssize_t written;
+
+	fd = open(OWEN_LPVD_FIQ_INTERFACE, O_WRONLY | O_SYNC);
+	if (fd < 0) {
+		if (errno == ENOENT) {
+			pr_info("LPVD FIQ is not supported by the system\n");
+			return;
+		}
+		pr_err("failed to open LPVD FIQ interface '%s': %s\n", 
+			OWEN_LPVD_FIQ_INTERFACE, strerror(errno));
+		return;
+	}
+	written = write(fd, on ? "1\n" : "0\n", 2);
+	if (written < 0) {
+		pr_err("failed to turn LPVD FIQ %s\n", on ? "on" : "off");
+	}
+	pr_info("LPVD FIQ is turned %s\n", on ? "on" : "off");
+	fsync(fd);
+	close(fd);
+}
+
 static int process_var_line(const char *line)
 {
 	int i, r;
@@ -243,6 +279,10 @@
 		pr_err("failed to open config '%s'\n", ctx.cfg_fname);
 		return -1;
 	}
+	
+	/* set init defaults in case these config vars are absent in config */
+	ctx.interval_sec = 1;
+	ctx.scan_chunk = ctx.flags.cfg_parsed ? ctx.retain_size : 0;
 
 	/* read line by line and seek for var_names - call var setting's handler */
 	while (fgets(buf, sizeof(buf), cfg_fp)) {
@@ -270,18 +310,24 @@
 	fclose(cfg_fp);
 
 	pr_info2("rs=%u, ra=0x%lx, rf='%s', i=%d, sc=%d\n", 
-		ctx.retain_size, ctx.retain_addr, ctx.retain_fname, 
-		ctx.interval_sec, ctx.scan_chunk);
+		(unsigned int)ctx.retain_size, ctx.retain_addr, 
+		ctx.retain_fname, ctx.interval_sec, ctx.scan_chunk);
 	
 	ctx.flags.cfg_parsed = 1;
 
+	/* check parsed configuration and correct vals as possible */
+	
 	if (!ctx.retain_size || !ctx.retain_addr) {
 		pr_err("retain memory size or/and address is not specified\n");
 		return -1;
 	}
-	if (!ctx.scan_chunk) {
+	if (ctx.interval_sec <= 0) {
+		ctx.interval_sec = 1;
+		pr_notice("use default interval == 1 sec.\n");
+	}
+	if (!ctx.scan_chunk || ctx.scan_chunk > ctx.retain_size) {
 		ctx.scan_chunk = ctx.retain_size;
-		pr_debug("use default scan chunk == whole size = %d\n", ctx.scan_chunk);
+		pr_notice("use default scan chunk == whole size = %d\n", ctx.scan_chunk);
 	}
 	return 0;
 }
@@ -381,6 +427,53 @@
 	return 0;
 }
 
+#define INIT_SIZE 1024
+static int retain_memory_file_init(const char *fname)
+{
+	int fd;
+	char buf[INIT_SIZE];
+	int count;
+	int rest;
+	int size;
+	
+	struct stat sbuf;
+	if (stat(fname, &sbuf) == 0) {
+		pr_err("can't create new retain memory file: the name already exists:'%s'\n", fname);
+		return -1;
+	}
+
+	fd = open(fname, O_CREAT | O_WRONLY, 0660);
+	if (fd < 0) {
+		pr_err("can't create new retain memory file: '%s': %s\n", 
+			fname, strerror(errno));
+		return -1;
+	}
+
+	/* init the file with 0s */
+	memset(buf, 0, INIT_SIZE);
+	count = ctx.retain_size / INIT_SIZE;
+	rest = ctx.retain_size % INIT_SIZE;
+	if (rest > 0) {
+		count++;
+	}
+	while (count--) {
+		size = write(fd, buf, INIT_SIZE);
+		if (size != INIT_SIZE) {
+			pr_err("failed to write %d 0s while initializing retain memory file\n", INIT_SIZE);
+		}
+	}
+	close(fd);
+
+	pr_info("retain memory file '%s' initialized\n", fname);
+
+	fd = open(fname, O_RDONLY);
+	if (fd < 0) {
+		pr_err("failed to open retain memory file:'%s': %s\n", 
+			fname, strerror(errno));
+	}
+	return fd;
+}
+
 static int retain_memory_init()
 {
 	int retain_fd;
@@ -403,27 +496,46 @@
 	/* alloc 2nd buffer */
 	ctx.copy_buf = malloc(ctx.retain_size);
 	if (!ctx.copy_buf) {
-		pr_err("failed to alloc copy buffer, size=%d\n", ctx.retain_size);
+		pr_err("failed to alloc copy buffer, size=%u\n", 
+			(unsigned int)ctx.retain_size);
 		return -1;
 	}
 	
 	/* open retain mem */
 	retain_fd = open(ctx.retain_fname, O_RDONLY);
 	if (retain_fd < 0) {
-		pr_err("failed to open retain memory interface:'%s'\n", 
-			ctx.retain_fname);
-		return -1;
+		/* if 'fname' is a file not on /sys/, try first create this file and init it with 0 */
+		if (memcmp(ctx.retain_fname, "/sys/", 5)) {
+			pr_notice("failed to open retain memory file:'%s', trying to create one..\n", 
+				ctx.retain_fname);
+			retain_fd = retain_memory_file_init(ctx.retain_fname);
+			if (retain_fd < 0) {
+				return -1;
+			}
+		} else {
+			pr_err("failed to open retain memory interface:'%s'\n", 
+				ctx.retain_fname);
+			return -1;
+		}
 	}
 	
-	/* read retain mem into the buffers */
+	/* read real retain memory data into the retain memory shadow buffer */
 	r = retain_read(retain_fd, ctx.retain_buf, ctx.retain_size);
 
 	close(retain_fd);
 	if (r) {
 		return -1;
 	}
-	
+
+	/* make local copy of retain memory shadow buffer for comparison */
 	memcpy(ctx.copy_buf, ctx.retain_buf, ctx.retain_size);
+
+	/* activate LPVD FIQ if supported */
+	if (!ctx.flags.no_fiq_init) {
+		switch_lpvd_fiq(1);
+	} else {
+		pr_info("LPVD FIQ activation skipped as requested\n");
+	}
 	
 	pr_debug2("done\n");
 	return 0;
diff -Nru a/rmsync.cfg b/rmsync.cfg
--- a/rmsync.cfg	2011-02-24 18:41:07.000000000 +0200
+++ b/rmsync.cfg	1970-01-01 03:00:00.000000000 +0300
@@ -1,16 +0,0 @@
-# Size of retain memory: configured automatically on start-up
-RETAIN_SIZE=245760
-# Physical address of retain memory: configured automatically on start-up
-RETAIN_ADDR=0x2032a000
-
-# Path to the retain memory file
-RETAIN_FILE=/sys/devices/platform/atmel_spi.0/spi0.2/eeprom
-#RETAIN_FILE=/mnt/ufs/root/retain/retain.bin
-
-# Variables can be changed in run-time (change a val and kill -HUP `cat retain.pid`)
-
-# Retain memory scan interval in sec (1...300)
-RETAIN_SCAN_INTERVAL=1
-
-# Size of chunk retain memory is scanned by (optional, default => whole size, i.e. RETAIN_SIZE)
-RETAIN_SCAN_CHUNK=16384
diff -Nru a/rmsync.cfg.in b/rmsync.cfg.in
--- a/rmsync.cfg.in	1970-01-01 03:00:00.000000000 +0300
+++ b/rmsync.cfg.in	2012-09-12 13:28:36.000000000 +0300
@@ -0,0 +1,20 @@
+# Size of retain memory: configured automatically on start-up
+RETAIN_SIZE=
+# Physical address of retain memory: configured automatically on start-up
+RETAIN_ADDR=
+
+# Path to the retain memory file (either can be used)
+# current setting for HE5684
+RETAIN_FILE=/sys/devices/platform/atmel_spi.0/spi0.2/eeprom
+# current setting for PLC240_SPK210, PLC323*
+#RETAIN_FILE=/sys/devices/platform/atmel_spi.0/spi0.1/eeprom
+# current setting for PLC304
+#RETAIN_FILE=/mnt/ufs/root/retain/retain.bin
+
+# Variables can be changed in run-time (change a val and kill -HUP `cat retain.pid`)
+
+# Retain memory scan interval in sec (1...300)
+RETAIN_SCAN_INTERVAL=1
+
+# Size of chunk retain memory is scanned by (optional, default => whole size, i.e. RETAIN_SIZE)
+#RETAIN_SCAN_CHUNK=40960
diff -Nru a/version.h b/version.h
--- a/version.h	2011-02-24 18:41:07.000000000 +0200
+++ b/version.h	1970-01-01 03:00:00.000000000 +0300
@@ -1,7 +0,0 @@
-#ifndef _VERSION_H_
-#define _VERSION_H_
-
-#define APP_NAME ""
-#define APP_VERSION " /20110224184056"
-
-#endif
diff -Nru a/version.sh b/version.sh
--- a/version.sh	2011-02-24 18:41:07.000000000 +0200
+++ b/version.sh	2012-09-13 17:55:18.000000000 +0300
@@ -5,7 +5,7 @@
 #define _VERSION_H_
 
 #define APP_NAME "$1"
-#define APP_VERSION "$2 /`date +%Y%m%d%H%M%S`"
+#define APP_VERSION "$2"
 
 #endif
 END
