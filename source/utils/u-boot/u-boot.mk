# Package: UBOOT
UBOOT_VERS?= 2010.03
UBOOT_EXT  = tar.bz2
UBOOT_SITE = ftp://ftp.denx.de/pub/u-boot
UBOOT_PDIR = utils/u-boot

UBOOT_RUNTIME_INSTALL = y
UBOOT_DEPS = MTD

UBOOT_POSTHOSTINST = +$(call do-fakeroot,$(MAKE) u-boot-rt) \
    $(call autoclean,u-boot-dirclean)

PLATFORM_CNF=at91rm9200dk_config
UBOOT_BINF  = u-boot*.bin

ifeq "$(MACH_EXTRA)" "am33"
UBOOT_BINF = {u-boot.img,MLO,spl/u-boot-spl.bin,u-boot.bin}
endif

CONF_ENG="spk105en_config spk107en_config "

ifneq (,$(findstring $(PLATFORM_CNF) ,$(CONF_ENG)))
PLATFORM_CONF_FILE=$(subst en_config,.h,$(PLATFORM_CNF))
else
PLATFORM_CONF_FILE=$(subst _config,.h,$(PLATFORM_CNF))
endif

$(eval $(call create-common-defs,u-boot,UBOOT,-))

UBOOT_BDIR=$(UBOOT_DIR)/build-$(BUILDCONF)

$(UBOOT_DIR)/.configured: $(UBOOT_STEPS_DIR)/.patched
	$(call print-info,[CONFG] UBOOT $(UBOOT_VERS) with $(PLATFORM_CNF))
# update build revision number
	$(Q)$(SED) -i -e \
	    '/_IDENT_STRING/s,OWEN-.*-.*,OWEN-$(TODAY)-$(BUILD_VERSION))",' \
	    -e "/#define DRAM_SIZE/s,SIZE_.*,SIZE_$(ROMBOOT_MSIZE)B," \
	    $(UBOOT_SDIR)/include/configs/$(PLATFORM_CONF_FILE) && \
	    { if [ "$(MACH)" = "at91" ]; then $(SED) -i -e "/^TEXT_BASE *=/s#=.*#= $(UBOOT_LOADADDR)#" $(UBOOT_SDIR)/board/atmel/at91rm9200dk/config.mk; fi; } && \
	rm -rf $(UBOOT_BDIR) && mkdir -p $(UBOOT_BDIR) && cd $(UBOOT_BDIR) && \
	    PATH=$(TARGET_DIR)/bin:$$PATH \
	    $(MAKE) -C $(UBOOT_SDIR) CROSS_COMPILE=$(TARGET)- \
	    O=$(UBOOT_BDIR) $(PLATFORM_CNF) \
	    $(call do-log,$(UBOOT_BDIR)/configure.out)
	$(Q){ if [ -n "$(UBOOT_LOGO)" -a -f "$(UBOOT_LOGO)" ]; then ln -sf $(UBOOT_LOGO) $(UBOOT_BDIR)/include/logo.h; fi; }
	$(Q){ if [ -n "$(UBOOT_BOARD_NAME)" ]; then echo -e "#ifndef __CUSTOM_BOARD_NAME_H\n#define __CUSTOM_BOARD_NAME_H\n\n#define CUSTOM_BOARD_NAME \"$(UBOOT_BOARD_NAME)\"\n\n#endif\n" >$(UBOOT_BDIR)/include/custom_board_name.h; fi; }
	$(Q)touch $@

#	TODO: add U_BOOT_VERSION modify in makefile
#	$(Q)printf '#define U_BOOT_VERSION "U-Boot %s.%s"\n' "`expr $(BUILD_VERSION) / 1000`" "`expr $(BUILD_VERSION) % 1000`" >$(UBOOT_BDIR)/include/version_autogenerated.h
#	$(SED) -i -e "s/\(U-Boot\).*/\1 $(shell printf "%u.%03u" "`expr $(BUILD_VERSION) / 1000`" "`expr $(BUILD_VERSION) % 1000`")/" $(UBOOT_BDIR)/include/version_autogenerated.h

$(UBOOT_DIR)/.built: $(UBOOT_DIR)/.configured
	$(call print-info,[BUILD] UBOOT $(UBOOT_VERS))
	$(Q)PATH=$(TARGET_DIR)/bin:$$PATH \
	    $(MAKE) -C $(UBOOT_SDIR) \
	    CROSS_COMPILE=$(TARGET)- O=$(UBOOT_BDIR) \
	    $(call do-log,$(UBOOT_BDIR)/make1.out) && \
	PATH=$(TARGET_DIR)/bin:$$PATH \
	    $(MAKE) -C $(UBOOT_SDIR) \
	    CROSS_COMPILE=$(TARGET)- O=$(UBOOT_BDIR) tools env \
	    $(call do-log,$(UBOOT_BDIR)/make2.out)
	$(Q)touch $@

$(UBOOT_DIR)/.hostinst: $(UBOOT_DIR)/.built
	$(call print-info,[INSTL] UBOOT $(UBOOT_VERS) to host)
	$(Q)$(SUDO) $(CP) $(UBOOT_BDIR)/tools/mkimage $(TARGET_DIR)/bin/ \
	    $(call do-log,$(UBOOT_BDIR)/hostinstall.out)
	$(Q)touch $@

u-boot-rt:
	$(Q){ rm -rf $(UBOOT_INSTDIR) && \
	    mkdir -p $(UBOOT_INSTDIR)/sbin && \
	    cd $(UBOOT_INSTDIR) && \
	    $(CP) $(UBOOT_BDIR)/tools/env/fw_printenv sbin && \
	    ln -sf fw_printenv sbin/fw_setenv; mkdir etc && \
	    $(CP) $(UBOOT_SDIR)/tools/env/*.config etc/ && \
	    PATH=$(TARGET_DIR)/bin:$$PATH \
	    $(MAKEPKG) u-boot-$(UBOOT_VERS).tgz \
	        $(call do-log,$(UBOOT_BDIR)/makepkg.out) && \
	    mv u-boot-$(UBOOT_VERS).tgz $(BINARIES_DIR)/arm$(MACH)-runtime/ ; }
	$(Q)rm -rf $(UBOOT_INSTDIR)

$(UBOOT_DIR)/.rtinstall: $(UBOOT_DIR)/.posthostinst
	$(Q)(mkdir -p $(BOOTSYS_DIR)/boot $(BOOTSYS_DIR)/logs && \
	    $(CP) $(UBOOT_BDIR)/u-boot $(BOOTSYS_DIR)/boot/u-boot.elf && \
	    $(CP) $(UBOOT_BDIR)/$(UBOOT_BINF) $(BOOTSYS_DIR)/boot/;)
	$(Q)mkdir -p $(RUNTIME_DIR) $(BOOTSYS_DIR)/logs && \
	    PATH=$(TARGET_DIR)/bin:$$PATH TMP=$(PKGBUILD_DIR) \
	    installpkg -root $(RUNTIME_DIR) \
	    $(BINARIES_DIR)/arm${MACH}-runtime/u-boot-$(UBOOT_VERS).tgz \
	    $(call do-log,$(BOOTSYS_DIR)/logs/u-boot-$(UBOOT_VERS).out)
	$(Q)touch $@
